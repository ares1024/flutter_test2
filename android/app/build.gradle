def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'  // new

android {
    compileSdkVersion 30

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.hd.flutter.test.flutter_test2"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file("./keystore/changyou.jks")
            storePassword "yinuozzq220"
            keyAlias "yinuoadmin"
            keyPassword "yinuozzq220"
        }
        debug {
//            storeFile file("./keystore/debug.jks")
//            storePassword "tuantuan123"
//            keyAlias "tuantuan"
//            keyPassword "tuantuan123"
            storeFile file("./keystore/changyou.jks")
            storePassword "yinuozzq220"
            keyAlias "yinuoadmin"
            keyPassword "yinuozzq220"
        }
    }

    buildTypes {
        debug {
            ndk {
                abiFilters "armeabi-v7a", "armeabi", "x86", "arm64-v8a"
            }
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

dependencies {
    implementation 'com.android.support:multidex:1.0.3'
}

flutter {
    source '../..'
}